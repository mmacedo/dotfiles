{"name":"mmacedo's dotfiles","tagline":"My very own scripts ^^","body":"# My dot files #\r\n\r\nDesigned for my own use, but feel free to use and submit issues and suggestions. I would be glad to know that it helped anyone besides me.\r\n\r\n## Requirements\r\n\r\nThis setup is specifically created for use with [Ubuntu 15.04 Vivid Vervet (AMD64)](http://releases.ubuntu.com/vivid/), to use with other versions or distributions just replace the [APT](https://en.wikipedia.org/wiki/Advanced_Packaging_Tool) calls and the [Ubuntu repositories and packages](https://help.ubuntu.com/community/Repositories/Ubuntu).\r\n\r\nAll commands below are meant to run on [bash](https://en.wikipedia.org/wiki/Bash_\\(Unix_shell\\)) (default shell on Ubuntu). Open a terminal with <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>t</kbd>. To open bash (if `echo $0` doesn't print `bash`):\r\n\r\n    /usr/bin/env bash\r\n\r\n## Install required software\r\n\r\nAdd software sources to install software that are not from Canonical:\r\n\r\n    # Enable partner\r\n    sudo sed -i \"/^# deb .*partner/ s/^# //\" /etc/apt/sources.list\r\n\r\n    # Enable proposed\r\n    echo 'deb http://br.archive.ubuntu.com/ubuntu/ trusty-proposed universe main restricted multiverse' | sudo tee -a /etc/apt/sources.list\r\n\r\n    # Add ppa's\r\n    sudo add-apt-repository -y ppa:fish-shell/nightly-master\r\n    sudo add-apt-repository -y ppa:webupd8team/sublime-text-3\r\n    sudo add-apt-repository -y ppa:skype-wrapper/ppa\r\n    sudo add-apt-repository -y ppa:bartbes/love-stable\r\n    sudo add-apt-repository -y ppa:danjaredg/jayatana\r\n    sudo add-apt-repository -y ppa:webupd8team/atom\r\n\r\n    # sbt\r\n    echo \"deb http://dl.bintray.com/sbt/debian /\" | sudo tee -a /etc/apt/sources.list.d/sbt.list\r\n\r\n    # Heroku Toolbelt ppa\r\n    wget -O- https://toolbelt.heroku.com/apt/release.key | sudo apt-key add -\r\n    sudo add-apt-repository 'deb http://toolbelt.heroku.com/ubuntu ./'\r\n\r\n    # Opera ppa\r\n    wget -O - http://deb.opera.com/archive.key | sudo apt-key add -\r\n    sudo add-apt-repository 'deb http://deb.opera.com/opera/ stable non-free'\r\n\r\n    # Google Talk Plugin ppa\r\n    wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -\r\n    sudo add-apt-repository 'deb http://dl.google.com/linux/talkplugin/deb/ stable main'\r\n\r\n    # Virtual box\r\n    wget -q http://download.virtualbox.org/virtualbox/debian/oracle_vbox.asc -O- | sudo apt-key add -\r\n    sudo add-apt-repository 'deb http://download.virtualbox.org/virtualbox/debian saucy contrib'\r\n\r\nInstall apt packages:\r\n\r\n    # Update package list\r\n    sudo apt-get update\r\n\r\n    # Install this package first, because it requires manual interaction\r\n    sudo apt-get install -y ttf-mscorefonts-installer\r\n\r\n    # A GPG key has not been published for this repository\r\n    sudo apt-get install -y --force-yes sbt\r\n\r\n    # Install packages\r\n    typeset -A pkgfor\r\n    pkgfor[dev]=\"atom sublime-text-installer vim-gtk kdiff3-qt meld guake\"\r\n    pkgfor[draw]=\"gimp gimp-gmic gimp-plugin-registry pinta inkscape shutter\"\r\n    pkgfor[other]=\"fbreader virtualbox-4.3\"\r\n    pkgfor[web]=\"chromium-browser opera google-talkplugin skype skype-wrapper pepperflashplugin-nonfree\"\r\n    pkgfor[shell]=\"fish xclip trash-cli curl vlc imagemagick graphviz heroku-toolbelt\"\r\n    pkgfor[vcs]=\"git git-svn mercurial\"\r\n    pkgfor[stack]=\"openjdk-8-jdk sbt love lua5.1\"\r\n    pkgfor[build]=\"build-essential checkinstall autoconf automake libtool g++ gettext\"\r\n    pkgfor[db]=\"mongodb libsqlite3-dev postgresql libpq-dev\"\r\n    pkgfor[ubuntu]=\"ubuntu-restricted-extras gdebi apt-file python-software-properties p7zip-full p7zip-rar jayatana\"\r\n    pkgfor[mono]=\"mono-gmcs fsharp monodevelop\"\r\n    pkgfor[libs]=\"exuberant-ctags libqt4-dev libfreetype6-dev libreadline-dev libbz2-dev libncurses5-dev zlib1g-dev libssl-dev libxml2 libxml2-dev libxslt1-dev tklib\"\r\n\r\n    pkgs1=\"${pkgfor[dev]} ${pkgfor[draw]} ${pkgfor[other]} ${pkgfor[web]}\"\r\n    pkgs2=\"${pkgfor[shell]} ${pkgfor[vcs]} ${pkgfor[stack]}\"\r\n    pkgs3=\"${pkgfor[build]} ${pkgfor[db]} ${pkgfor[ubuntu]}\"\r\n    pkgs4=\"${pkgfor[mono]} ${pkgfor[libs]}\"\r\n\r\n    sudo apt-get install -y $pkgs1 $pkgs2 $pkgs3 $pkgs4\r\n\r\n    # Perform update\r\n    sudo apt-get dist-upgrade -y\r\n\r\nInstall [PhantomJS](http://phantomjs.org/) manually, since the apt package is usually many versions behind:\r\n\r\n    PHANTOMJS=phantomjs-1.9.8-linux-x86_64\r\n    curl -Ls https://bitbucket.org/ariya/phantomjs/downloads/$PHANTOMJS.tar.bz2 | tar -xj\r\n    sudo mv $PHANTOMJS /usr/local/lib/phantomjs\r\n    sudo ln -s /usr/local/lib/phantomjs/bin/phantomjs /usr/local/bin/phantomjs\r\n\r\nConfigure [VirtualBox](https://www.virtualbox.org/):\r\n\r\n    # Download and Install VirtualBox Extension Pack\r\n    wget http://download.virtualbox.org/virtualbox/4.3.6/Oracle_VM_VirtualBox_Extension_Pack-4.3.6-91406.vbox-extpack\r\n    VBoxManage extpack install *.vbox-extpack\r\n    rm *.vbox-extpack\r\n\r\n## Configure workspace\r\n\r\nConfigure SSH key:\r\n\r\n    # Generate SSH key\r\n    ssh-keygen -t rsa -C \"michelpm@gmail.com\"\r\n\r\n    # Copy to clipboard\r\n    xclip -sel clip < ~/.ssh/id_rsa.pub\r\n\r\nTo upload to [Github](https://github.com/), go to [Account settings](https://github.com/settings/ssh), click 'Add SSH key', paste in the 'Key' text field and click in 'Add key'.\r\n\r\nTo upload the key to [Heroku](http://www.heroku.com/), use the [Heroku Toolbelt](https://toolbelt.herokuapp.com/):\r\n\r\n    # Login\r\n    heroku login\r\n\r\n    # Remove previous keys if you are not using them anymore, you may use also `keys:remove`\r\n    heroku keys:clear\r\n\r\n    # Upload\r\n    heroku keys:add\r\n\r\nConfigure workspace:\r\n\r\n    # Create empty folders on the workspace\r\n    mkdir -p ~/ws/{etc,st3,rb,js}\r\n\r\n    # Clone this repository\r\n    git clone git@github.com:mmacedo/dotfiles.git ~/dotfiles\r\n\r\n## Configure programming stacks\r\n\r\nInstall [rbenv](https://github.com/sstephenson/rbenv) and several plugins with [rbenv-installer](https://github.com/fesplugas/rbenv-installer) and build the latest [MRI/CRuby](http://www.ruby-lang.org/):\r\n\r\n    # Stop errors when on system ruby\r\n    sudo gem install bundler\r\n\r\n    # Run rbenv-installer\r\n    curl -L https://raw.github.com/fesplugas/rbenv-installer/master/bin/rbenv-installer | bash\r\n\r\n    # Copy Ruby dotfiles\r\n    for rc in ~/dotfiles/{irb,pry,gem}rc; do ln -s $rc ~/.${rc##*/}; done\r\n\r\n    # Load rbenv to install ruby\r\n    export PATH=\"$HOME/.rbenv/bin:$PATH\"\r\n    eval \"$(rbenv init -)\"\r\n\r\n    # Install latest MRI\r\n    env RUBY_CONFIGURE_OPTS=--with-readline-dir=\"/usr/lib/libreadline.so\" rbenv install 2.2.2\r\n    rbenv global 2.2.2\r\n\r\n    # Install gems\r\n    gem update --system\r\n    gem update\r\n    gem install bundler\r\n    rbenv rehash\r\n    pushd ~/dotfiles; bundle install; popd\r\n\r\n    # Install rails and test the installation of some gems with dependencies\r\n    gem install rails mongoid pg sqlite3 therubyracer bson_ext yajl-ruby nokogiri\r\n\r\nInstall [pyenv](https://github.com/yyuu/pyenv) and build the latest [Python](http://www.python.org/) 2 and 3:\r\n\r\n    # Install pyenv\r\n    git clone http://github.com/yyuu/pyenv ~/.pyenv\r\n\r\n    # Load pyenv to install python\r\n    export PATH=\"$HOME/.pyenv/bin:$PATH\"\r\n    eval \"$(pyenv init -)\"\r\n\r\n    # Install dependencies for python 2 and 3\r\n    sudo apt-get build-dep -y python2.7 python3.4\r\n\r\n    # Install latest python 2 and 3\r\n    pyenv install 2.7.10\r\n    pyenv install 3.4.3\r\n    pyenv global 3.4.3 2.7.10\r\n\r\n    # Update pip and install ipython for both\r\n    pip2 install --upgrade pip\r\n    pip2 install ipython\r\n    pip install --upgrade pip\r\n    pip install ipython\r\n\r\n\r\nInstall [ndenv](https://github.com/riywo/ndenv) and [node-build](http://github.com/riywo/node-build) build the latest [Node.js](http://nodejs.org/):\r\n\r\n    # Install ndenv\r\n    git clone http://github.com/riywo/ndenv ~/.ndenv\r\n\r\n    # Install node-build\r\n    git clone http://github.com/riywo/node-build ~/.ndenv/plugins/node-build\r\n\r\n    # Load ndenv to install node\r\n    export PATH=\"$HOME/.ndenv/bin:$PATH\"\r\n    eval \"$(ndenv init -)\"\r\n\r\n    # Install latest node.js\r\n    ndenv install v0.12.7\r\n    ndenv global v0.12.7\r\n    ndenv rehash\r\n\r\n    # And some packages\r\n    npm update -g\r\n    npm install -g grunt-cli jshint jscs jsdoc karma-cli less coffee-script bower\r\n    ndenv rehash\r\n\r\n    # Install latest io.js\r\n    ndenv install iojs-v2.4.0\r\n    ndenv global iojs-v2.4.0\r\n    ndenv rehash\r\n\r\n    # And some packages\r\n    npm update -g\r\n    npm install -g grunt-cli jshint jscs jsdoc karma-cli less coffee-script bower\r\n    ndenv rehash\r\n\r\nInstall [scala](http://www.scala-lang.org/):\r\n\r\n    # Install scala\r\n    wget http://downloads.typesafe.com/scala/2.12.0-M1/scala-2.12.0-M1.tgz\r\n    tar zxf scala-2.12.0-M1.tgz\r\n    sudo mv scala-2.12.0-M1 /usr/local/share/scala\r\n    rm scala-2.12.0-M1.tgz\r\n\r\n    # Add links to the path\r\n    sudo ln -s /usr/local/share/scala/bin/scala /usr/local/bin/scala\r\n    sudo ln -s /usr/local/share/scala/bin/scalac /usr/local/bin/scalac\r\n    sudo ln -s /usr/local/share/scala/bin/fsc /usr/local/bin/fsc\r\n    sudo ln -s /usr/local/share/scala/bin/scaladoc /usr/local/bin/scaladoc\r\n    sudo ln -s /usr/local/share/scala/bin/scalap /usr/local/bin/scalap\r\n\r\n## Configure applications\r\n\r\nConfigure [Guake](http://guake.org/).\r\n\r\n    gconftool-2 --load ~/dotfiles/guake-preferences.xml\r\n\r\nConfigure [Sublime Text 3](http://www.sublimetext.com/) and install [Sublime Package Control](http://wbond.net/sublime_packages/package_control) and [URL handler](http://blog.byscripts.info/2013/02/txmt-protocol-and-sublime-text-2-english.html). First time you open Sublime Text 3 after doing these steps, Sublime Text 2 will install Sublime Package Control. First time it opens after that, Sublime Package Control is going to read my list of packages and install every one of them, but it is going to generate several errors and may need a few restarts until it finishes. Also, do not forget to enter license.\r\n\r\n    # Copy configuration\r\n    mkdir -p ~/.config/sublime-text-3/Packages/User\r\n    rm ~/.config/sublime-text-3/Packages/User/{Preferences.sublime-settings,Default\\ \\(Linux\\).sublime-keymap}\r\n    for file in ~/dotfiles/st3/*; do ln -s \"$file\" ~/.config/sublime-text-3/Packages/User/; done\r\n\r\n    # Install package_control package\r\n    mkdir -p ~/.config/sublime-text-3/Installed\\ Packages\r\n    curl http://sublime.wbond.net/Package%20Control.sublime-package > ~/.config/sublime-text-3/Installed\\ Packages/Package\\ Control.sublime-package\r\n\r\n    # Install url handler for txtm:// and subl:// with Sublime Text 3\r\n    wget https://raw.github.com/MrZYX/PKGBUILDs/master/sublime-url-handler/sublime-url-handler\r\n    chmod +x sublime-url-handler\r\n    sudo mv sublime-url-handler /usr/local/bin/\r\n    wget https://raw.github.com/MrZYX/PKGBUILDs/master/sublime-url-handler/sublime-url-handler.desktop\r\n    sudo mkdir -p /usr/local/share/applications/\r\n    sudo mv sublime-url-handler.desktop /usr/local/share/applications/\r\n    sudo update-desktop-database\r\n\r\nInstall a [Vim](http://www.vim.org/) [distribution](https://github.com/carlhuda/janus) (need the ruby in the path to have rake installed). I don't pay much to attention to it, since I use it only to edit git commit messages.\r\n\r\n    curl -Lo- https://bit.ly/janus-bootstrap | bash\r\n    ln -s ~/dotfiles/vimrc.before ~/.vimrc.before\r\n\r\n## Configure command line tools\r\n\r\nInstall and configure [ack](http://betterthangrep.com/):\r\n\r\n    curl http://beyondgrep.com/ack-2.04-single-file | sudo tee /usr/local/bin/ack\r\n    sudo chmod 0755 /usr/local/bin/ack\r\n    ln -s ~/dotfiles/ackrc ~/.ackrc\r\n\r\nConfigure [git](http://git-scm.com/):\r\n\r\n    ln -s ~/dotfiles/gitconfig ~/.gitconfig\r\n\r\nConfigure [hg](http://mercurial.selenic.com/):\r\n\r\n    hg clone http://bitbucket.org/sjl/hg-prompt/\r\n    ln -s ~/dotfiles/hgrc ~/.hgrc\r\n\r\nConfigure [fish](http://fishshell.com/):\r\n\r\n    chsh -s $(which fish)\r\n    curl -L https://github.com/oh-my-fish/oh-my-fish/raw/master/tools/install.fish | fish\r\n    mkdir -p ~/.config/fish && rm ~/.config/fish/config.fish && ln -s ~/dotfiles/config.fish ~/.config/fish/config.fish\r\n    mkdir -p ~/.oh-my-fish/custom/themes/my && ln -s ~/dotfiles/fish_prompt.fish ~/.oh-my-fish/custom/themes/my/fish_prompt.fish\r\n\r\nWhen you first enter fish, you have to install the plugins:\r\n\r\n    omf install\r\n","google":"UA-26194428-1","note":"Don't delete this file! It's used internally to help with page regeneration."}