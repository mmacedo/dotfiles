{"name":"mmacedo's dotfiles","tagline":"My very own scripts ^^","body":"# <a id=\"my-dot-files\"></a>My dot files #\r\n\r\nDesigned for my own use, but feel free to use and submit issues and suggestions. I would be glad to know that it helped anyone besides me.\r\n\r\n\r\n## <a id=\"os\"></a>Requirements\r\n\r\nThis setup is specifically created for use with [Ubuntu 13.04 Raring Ringtail (x86_64)](http://releases.ubuntu.com/raring/), to use with other versions or distributions just replace the [APT](https://en.wikipedia.org/wiki/Advanced_Packaging_Tool) calls and the [Ubuntu repositories and packages](https://help.ubuntu.com/community/Repositories/Ubuntu).\r\n\r\nAll commands below are meant to run on [bash](https://en.wikipedia.org/wiki/Bash_(Unix_shell\\)) (default shell on Ubuntu). Open a terminal with <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>t</kbd>. To open bash (if `echo $0` doesn't print `bash`):\r\n\r\n    /usr/bin/env bash\r\n\r\n\r\n## <a id=\"install-software\"></a>Install required software\r\n\r\n<a id=\"ppa\"></a>Add software sources to install software that are not from Canonical:\r\n\r\n    # Enable Canonical Partner\r\n    sudo sed -i \"/^# deb .*partner/ s/^# //\" /etc/apt/sources.list\r\n\r\n    # Add ppa's\r\n    sudo add-apt-repository -y ppa:zanchey/fishfish-snapshot\r\n    sudo add-apt-repository -y ppa:chris-lea/node.js\r\n    sudo add-apt-repository -y ppa:webupd8team/sublime-text-2\r\n    sudo add-apt-repository -y ppa:skype-wrapper/ppa\r\n\r\n    # Heroku Toolbelt ppa\r\n    wget -O- https://toolbelt.heroku.com/apt/release.key | sudo apt-key add -\r\n    echo \"deb http://toolbelt.heroku.com/ubuntu ./\" | sudo tee /etc/apt/sources.list.d/heroku.list\r\n\r\n    # Opera ppa\r\n    wget -O - http://deb.opera.com/archive.key | sudo apt-key add -\r\n    echo \"deb http://deb.opera.com/opera/ stable non-free\" | sudo tee /etc/apt/sources.list.d/opera.list\r\n\r\n    # Google Talk Plugin ppa\r\n    wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -\r\n    echo \"deb http://dl.google.com/linux/talkplugin/deb/ stable main\" | sudo tee /etc/apt/sources.list.d/google.list\r\n\r\n<a id=\"apt\"></a>Install apt packages:\r\n\r\n    # Update package list\r\n    sudo apt-get update\r\n\r\n    # Install this package first, because it requires manual interaction\r\n    sudo apt-get install -y ttf-mscorefonts-installer\r\n\r\n    # Install packages\r\n    typeset -A pkgfor\r\n    pkgfor[app]=\"fbreader sublime-text vim-gtk kdiff3-qt meld guake pinta inkscape shutter\"\r\n    pkgfor[build]=\"build-essential checkinstall\"\r\n    pkgfor[db]=\"mongodb libsqlite3-dev postgresql libpq-dev\"\r\n    pkgfor[vcs]=\"git git-svn gitg hg\"\r\n    pkgfor[media]=\"qbittorrent vlc audacious\"\r\n    pkgfor[shell]=\"fishfish xclip trash-cli curl imagemagick ffmpeg graphviz heroku-toolbelt\"\r\n    pkgfor[stack]=\"nodejs openjdk-7-jdk\"\r\n    pkgfor[ubuntu]=\"ubuntu-restricted-extras aptitude synaptic python-software-properties p7zip-full p7zip-rar\"\r\n    pkgfor[web]=\"chromium-browser chromium-codecs-ffmpeg-extra opera google-talkplugin skype skype-wrapper\"\r\n    pkgfor[libs]=\"exuberant-ctags libqt4-dev libfreetype6-dev\"\r\n    sudo apt-get install -y ${pkgfor[app]} ${pkgfor[build]} ${pkgfor[db]} ${pkgfor[vcs]} ${pkgfor[media]} ${pkgfor[shell]} ${pkgfor[stack]} ${pkgfor[ubuntu]} ${pkgfor[web]} ${pkgfor[libs]}\r\n\r\n    # Remove unwanted packages\r\n    sudo apt-get purge -y unity-lens-shopping ubuntuone-client* python-ubuntuone-* totem deja-dup rhythmbox transmission* thunderbird\r\n\r\n    # Perform full upgrade\r\n    sudo apt-get dist-upgrade -y\r\n\r\n    # Clean up\r\n    sudo apt-get autoremove --purge -y\r\n    sudo apt-get autoclean\r\n\r\n<a id=\"phantomjs\"></a>Install [PhantomJS](http://phantomjs.org/) manually, since apt package is too old:\r\n\r\n    PHANTOMJS=phantomjs-1.9.1-linux-x86_64\r\n    curl http://phantomjs.googlecode.com/files/$PHANTOMJS.tar.bz2 | tar -xj\r\n    sudo mv $PHANTOMJS /usr/lib/phantomjs\r\n    sudo ln -s /usr/lib/phantomjs/bin/phantomjs /usr/bin/phantomjs\r\n\r\n\r\n## <a id=\"configure-development-environment\"></a>Configure workspace\r\n\r\n<a id=\"ssh\"></a>Configure SSH key:\r\n\r\n    # Generate SSH key\r\n    ssh-keygen -t rsa -C \"michelpm@gmail.com\"\r\n\r\n    # Copy to clipboard\r\n    xclip -sel clip < ~/.ssh/id_rsa.pub\r\n\r\n<a id=\"ssh-github\"></a>To upload to [Github](https://github.com/), go to [Account settings](https://github.com/settings/ssh), click 'Add SSH key', paste in the 'Key' text field and click in 'Add key'.\r\n\r\n<a id=\"ssh-heroku\"></a>To upload the key to [Heroku](http://www.heroku.com/), use the [Heroku Toolbelt](https://toolbelt.herokuapp.com/):\r\n\r\n    # Login\r\n    heroku login\r\n\r\n    # Remove previous keys if you are not using them anymore, you may use also `keys:remove`\r\n    heroku keys:clear\r\n\r\n    # Upload\r\n    heroku keys:add\r\n\r\n<a id=\"configure-workspace\"></a>Configure workspace:\r\n\r\n    # Create empty folders on the workspace\r\n    mkdir -p ~/ws/{clone,st2,ruby,nodejs}\r\n\r\n    # Clone this repository\r\n    git clone git@github.com:mmacedo/dotfiles.git ~/dotfiles\r\n\r\n\r\n## <a id=\"configure-programming-stacks\"></a>Configure programming stacks\r\n\r\n<a id=\"ruby\"></a><a id=\"rbenv\"></a>Install several [rbenv](https://github.com/sstephenson/rbenv) plugins with [rbenv-installer](https://github.com/fesplugas/rbenv-installer) and build the latest [MRI/CRuby](http://www.ruby-lang.org/):\r\n\r\n    # Run rbenv-installer\r\n    curl https://raw.github.com/fesplugas/rbenv-installer/master/bin/rbenv-installer | bash\r\n\r\n    # Copy Ruby dotfiles\r\n    for rc in ~/dotfiles/{irb,pry,gem}rc; do ln -s $rc ~/.${rc##*/}; done\r\n\r\n    # Load rbenv to install ruby\r\n    export PATH=\"$HOME/.rbenv/bin:$PATH\"\r\n    eval \"$(rbenv init -)\"\r\n\r\n    # Install dependencies for ruby\r\n    sudo rbenv bootstrap-ubuntu-12-10\r\n\r\n    # Install latest MRI\r\n    rbenv install 2.0.0-p247\r\n    rbenv global 2.0.0-p247\r\n\r\n    # Install gems\r\n    gem update --system\r\n    gem install bundler\r\n    pushd ~/dotfiles; bundle install; popd\r\n\r\n<a id=\"pyenv\"></a><a id=\"python\"></a>Install [pyenv](https://github.com/yyuu/pyenv) and build the latest [Python](http://www.python.org/):\r\n\r\n    # Install pyenv\r\n    git clone http://github.com/yyuu/pyenv ~/.pyenv\r\n\r\n    # Load pyenv to install python\r\n    export PATH=\"$HOME/.pyenv/bin:$PATH\"\r\n    eval \"$(pyenv init -)\"\r\n\r\n    # Install dependencies for python\r\n    sudo apt-get build-dep -y python3.3\r\n\r\n    # Install latest python\r\n    pyenv install 3.3.2\r\n    pyenv global 3.3.2\r\n\r\n<a id=\"node\"></a><a id=\"nodejs\"></a><a id=\"ndenv\"></a>Install [ndenv](https://github.com/riywo/ndenv) and install the latest [Node.js](http://nodejs.org/):\r\n\r\n    # Install ndenv\r\n    git clone http://github.com/riywo/ndenv ~/.ndenv\r\n\r\n    # Install node-build\r\n    git clone http://github.com/riywo/node-build ~/.ndenv/plugins/node-build\r\n\r\n    # Load ndenv to install node\r\n    export PATH=\"$HOME/.ndenv/bin:$PATH\"\r\n    eval \"$(ndenv init -)\"\r\n\r\n    # Install latest node\r\n    ndenv install v0.11.4\r\n    ndenv global v0.11.4\r\n    ndenv rehash\r\n\r\n    # Install global packages\r\n    pushd ~/dotfiles; npm install -global; popd\r\n\r\n## <a id=\"install-and-configure-text-editors-and-ides\"></a>Configure applications\r\n\r\n<a id=\"guake\"></a>Configure [Guake](http://guake.org/).\r\n\r\n    gconftool-2 --load ~/dotfiles/guake-preferences.xml\r\n\r\n<a id=\"st2\"></a>Configure [Sublime Text 2](http://www.sublimetext.com/) and install [Sublime Package Control](http://wbond.net/sublime_packages/package_control) and [URL handler](http://blog.byscripts.info/2013/02/txmt-protocol-and-sublime-text-2-english.html). First time you open Sublime Text 2 after doing these steps, Sublime Text 2 will install Sublime Package Control. First time it opens after that, Sublime Package Control is going to read my list of packages and install every one of them, but it is going to generate several errors and may need a few restarts until it finishes. Also, do not forget to enter license.\r\n\r\n    # Copy configuration\r\n    mkdir -p ~/.config/sublime-text-2/Packages/User\r\n    for file in ~/dotfiles/st2/*; do ln -s \"$file\" ~/.config/sublime-text-2/Packages/User/; done\r\n\r\n    # Install package_control package\r\n    mkdir -p ~/.config/sublime-text-2/Installed\\ Packages\r\n    curl http://sublime.wbond.net/Package%20Control.sublime-package > ~/.config/sublime-text-2/Installed\\ Packages/Package\\ Control.sublime-package\r\n\r\n    # Install url handler for txtm:// and subl:// with Sublime Text 2\r\n    wget https://raw.github.com/MrZYX/PKGBUILDs/master/sublime-url-handler/sublime-url-handler\r\n    chmod +x sublime-url-handler\r\n    sudo mv sublime-url-handler /usr/bin/\r\n    wget https://raw.github.com/MrZYX/PKGBUILDs/master/sublime-url-handler/sublime-url-handler.desktop\r\n    sudo mv sublime-url-handler.desktop /usr/share/applications/\r\n    sudo update-desktop-database\r\n\r\n<a id=\"vim\"></a><a id=\"janus\"></a>Install a [Vim](http://www.vim.org/) [distribution](https://github.com/carlhuda/janus) (need the ruby in the path to have rake installed). I don't pay much to attention to it, since I use it mainly to edit git commit messages.\r\n\r\n    curl -Lo- https://bit.ly/janus-bootstrap | bash\r\n\r\n\r\n## <a id=\"configure-command-line-tools\"></a>Configure command line tools\r\n\r\n<a id=\"ack\"></a>Install and configure [ack](http://betterthangrep.com/):\r\n\r\n    curl http://beyondgrep.com/ack-2.04-single-file > ~/bin/ack && chmod 0755 !#:3\r\n    ln -s ~/dotfiles/ackrc ~/.ackrc\r\n\r\n<a id=\"git\"></a>Configure [git](http://git-scm.com/):\r\n\r\n    ln -s ~/dotfiles/gitconfig ~/.gitconfig\r\n\r\n<a id=\"hg\"></a>Configure [hg](http://mercurial.selenic.com/):\r\n\r\n    hg clone http://bitbucket.org/sjl/hg-prompt/\r\n    ln -s ~/dotfiles/hgrc ~/.hgrc\r\n\r\n<a id=\"fish\"></a>Configure [fish](http://fishshell.com/):\r\n\r\n    chsh -s $(which fish)\r\n    curl -L https://github.com/bpinto/oh-my-fish/raw/master/tools/install.sh | bash\r\n    mkdir -p ~/.config/fish && ln -s ~/dotfiles/{config,functions,rbenv,pyenv,ndenv}.fish ~/.config/fish/\r\n    mkdir -p ~/.oh-my-fish/themes/my && ln -s ~/dotfiles/fish_prompt.fish ~/.oh-my-fish/themes/my/\r\n","google":"UA-26194428-1","note":"Don't delete this file! It's used internally to help with page regeneration."}